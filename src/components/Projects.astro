---
import GitHub from "./icons/GitHub.astro";
import NextJS from "./icons/NextJS.astro";
import Tailwind from "./icons/Tailwind.astro";
import Link from "./icons/Link.astro";
import LinkButton from "./LinkButton.astro";
import ReactJS from "./icons/ReactJS.astro";
import AstroJS from "./icons/AstroJS.astro";
import Django from "./icons/Django.astro";
import FastApi from "./icons/FastApi.astro";
import ReactRouter from "./icons/ReactRouter.astro";
import Postgres from "./icons/Postgres.astro";
import Python from "./icons/Python.astro";
import Tensorflow from "./icons/Tensorflow.astro";
import Opencv from "./icons/Opencv.astro";
import Graphql from "./icons/Graphql.astro";
import Mongodb from "./icons/Mongodb.astro";
import Nodejs from "./icons/Nodejs.astro";
import Pandas from "./icons/Pandas.astro";
import DjangoRest from "./icons/DjangoRest.astro";
import { getI18N } from "@/i18n/utils";

const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  REACT: {
    name: "React.js",
    class: "bg-[#61DBFB]/30 text-white",
    icon: ReactJS,
  },
  ASTRO: {
    name: "Astro.js",
    class: "bg-[#FF5D01] text-white",
    icon: AstroJS,
  },
  DJANGO: {
    name: "Django",
    class: "bg-[#092E20] text-white",
    icon: Django,
  },
  FASTAPI: {
    name: "FastAPI",
    class: "bg-[#092E20] text-white",
    icon: FastApi,
  },
  REACTROUTER: {
    name: "React Router",
    class: "bg-[#61DBFB]/30 text-white",
    icon: ReactRouter,
  },
  POSTGRES: {
    name: "PostgreSQL",
    class: "bg-[#0E9EE4]/50 text-white",
    icon: Postgres,
  },
  PYTHON: {
    name: "Python",
    class: "bg-[#092E20] text-white",
    icon: Python,
  },
  TENSORFLOW: {
    name: "TensorFlow",
    class: "bg-[#092E20] text-white",
    icon: Tensorflow,
  },
  OPENCV: {
    name: "OpenCV",
    class: "bg-[#e9f2ee]/30 text-white",
    icon: Opencv,
  },
  NODEJS: {
    name: "Node.js",
    class: "bg-[#68a063]/30 text-white",
    icon: Nodejs,
  },
  GRAPHQL: {
    name: "GraphQL",
    class: "bg-[#e535ab]/30 text-white",
    icon: Graphql,
  },
  MONGODB: {
    name: "MongoDB",
    class: "bg-[#13aa52]/50 text-white",
    icon: Mongodb,
  },
  PANDAS: {
    name: "Pandas",
    class: "bg-[#555]/50 text-white",
    icon: Pandas,
  },
  DJANGOREST: {
    name: "Django Rest Framerwork",
    class: "bg-[#772626]/50 text-white",
    icon: DjangoRest,
  },
};
const PROJECTS = [
  {
    title: 'DixBase',
    description: i18n.PROJECT_DIXBASE_DESCRIPTION,
    link: 'https://dixbase.com',
    // github: "https://github.com/",
    image: '/projects/dixbase_logo2.webp',
    tags: [TAGS.ASTRO, TAGS.REACT, TAGS.TAILWIND],
  },
  {
    title: 'OpiCuba',
    description: i18n.PROJECT_OPICUBA_DESCRIPTION,
    // link: 'https://dixbase.com',
    github: "https://github.com/ale-01cu/z17-MITRANS",
    image: '/projects/OpiCuba.webp',
    tags: [TAGS.REACTROUTER, TAGS.REACT, TAGS.TAILWIND, TAGS.DJANGO, TAGS.DJANGOREST, TAGS.POSTGRES],
  },
  {
    title: 'Bot de Facebook Messenger',
    description: i18n.PROJECT_MESSENGER_BOT_DESCRIPTION,
    // link: 'https://dixbase.com',
    github: "https://github.com/ale-01cu/z17-MITRANS/tree/main/machine_learning/bot",
    image: '/projects/messenger.webp',
    tags: [TAGS.PYTHON, TAGS.OPENCV],
  },
  {
    title: 'Sistema de Recomendación',
    description: i18n.PROJECT_RECOMMENDATION_SYSTEM_DESCRIPTION,
    // link: 'https://dixbase.com',
    github: "https://github.com/ale-01cu/Picta-Project/tree/main/recommender_engine/backend",
    image: '/projects/Recommender.webp',
    tags: [TAGS.PYTHON, TAGS.FASTAPI, TAGS.TENSORFLOW, TAGS.PANDAS],
  },
  {
    title: 'Solaris',
    description: i18n.PROJECT_SOLARIS_DESCRIPTION,
    // link: 'https://dixbase.com',
    github: "https://github.com/ale-01cu/solaris",
    image: '/projects/solaris.webp',
    tags: [TAGS.REACT, TAGS.TAILWIND, TAGS.NODEJS, TAGS.GRAPHQL, TAGS.MONGODB],
  },
  {
    title: 'Home',
    description: i18n.PROJECT_HOME_DESCRIPTION,
    // link: 'https://dixbase.com',
    github: "https://github.com/ale-01cu/home-project",
    image: '/projects/home.webp',
    tags: [TAGS.REACT, TAGS.TAILWIND, TAGS.DJANGO, TAGS.DJANGOREST, TAGS.POSTGRES],
  },
  {
    title: 'Magic',
    description: i18n.PROJECT_MAGIC_DESCRIPTION,
    // link: 'https://dixbase.com',
    github: "https://github.com/ale-01cu/e-commerce",
    image: '/projects/magic.webp',
    tags: [TAGS.REACT, TAGS.TAILWIND, TAGS.DJANGO, TAGS.DJANGOREST, TAGS.POSTGRES],
  },
  {
    title: "MeatChef's Kitchen",
    description: i18n.PROJECT_MEATCHEF_DESCRIPTION,
    // link: 'https://dixbase.com',
    github: "https://github.com/ale-01cu/MeatChef-s-Kitchen",
    image: '/projects/chef.webp',
    tags: [TAGS.REACT, TAGS.TAILWIND, TAGS.DJANGO, TAGS.DJANGOREST, TAGS.POSTGRES],
  },
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt="Recién llegado vs 5 años en Nueva Zelanda" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row flex-wrap mb-2 gap-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              {i18n.PROJECT_CODE_BUTTON}
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <Link class="size-4" />
              {i18n.PROJECT_PREVIEW_BUTTON}
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>



